package ch.pschatzmann.news.processing;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.LongStream;
import java.util.stream.Stream;

import org.apache.solr.client.solrj.response.QueryResponse;

import ch.pschatzmann.news.Document;
import ch.pschatzmann.news.SolrDocumentStore;

/**
 * This class has been implemented to be used by Spark. We return the list of page numbers which can be serialized and
 * a method to get the data by page number
 * @author pschatzmann
 *
 */
public class PagedDocuments {
	private SolrPagedQuery pq;
	private long max;

	public PagedDocuments(SolrDocumentStore ds, String search) {
		this(ds, Map.of("q", search));		
	}

	public PagedDocuments(SolrDocumentStore ds, Map<String, String> search) {
		if (!search.containsKey("df")) {
			search.put("df", "content_t");
		}
		if (!search.containsKey("sort")) {
			search.put("sort", "id asc");
		}
		pq  = new SolrPagedQuery(ds.getSolrClient(), search, ds.getCoreName(), 100);
		pq.next();
		max = pq.getPages();
	}
	
	public List<Long> pageNumbers(){
		return LongStream.range(0, max).boxed().collect(Collectors.toList());
	}
	
	public List<Document> page(long pos) {
		return pq.getPage(pos).getBeans(Document.class);
	}

}
