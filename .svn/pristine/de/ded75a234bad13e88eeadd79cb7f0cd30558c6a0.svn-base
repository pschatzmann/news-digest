package ch.pschatzmann.news;

import java.io.IOException;
import java.net.URISyntaxException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ch.pschatzmann.news.utils.FixedRateTimer;
import ch.pschatzmann.news.utils.Utils;

/**
 * Loads the History data from the NWT and the RSS entries defined in the feeds.csv file 
 * @author pschatzmann
 *
 */
public class Main {
	private static Logger log = LoggerFactory.getLogger(Main.class);
	private static String solrCore = Utils.property("solrCore","mycore");
	private static String solrUrl = Utils.property("solrUrl","http://nuc.local:8983/solr");
	
	
	public static void main(String[] args) throws IOException, URISyntaxException, InterruptedException {
		log.info("Document import has been started");
		SolrDocumentStore store = new SolrDocumentStore(solrCore, solrUrl);

		// save RSS every hour		
		new RSSData(store).scheduleSave( 1000L * 60L * 60L * 1L);

		// Guardian
		new HistoryDataGuardian(store).scheduleSave( 1000L * 60L * 60L * 24L);

		// save NYT history every day
		new HistoryDataNYT(store).scheduleSave(1000L * 60L * 60L * 24L);	

		log.info("The application is running...");
		
		waitForEver();
	}

	

	/**
	 * Infinite loop
	 * @throws InterruptedException
	 */
	public static void waitForEver() throws InterruptedException {
		while(true) {
			Thread.sleep(100000);
		}
	}


}
